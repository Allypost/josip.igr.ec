---
import type { ImageMetadata } from "astro";
import { ViewTransitions } from "astro:transitions";
import { SEO } from "astro-seo";

import { SITE_DESCRIPTION, SITE_TITLE } from "~/app/consts";
import { remoteCdnUrl } from "~/app/helpers";

type Props = {
  title?: string;
  description?: string;
  image?: string | ImageMetadata;
};

const {
  title,
  description = SITE_DESCRIPTION,
  image: imageProp = "/blog-placeholder-1.jpg",
} = Astro.props;

const imagePropSrc = typeof imageProp === "string" ? imageProp : imageProp.src;

const image = new URL(imagePropSrc, Astro.url).toString();
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />

<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />

<link rel="preconnect" href={remoteCdnUrl()} crossorigin />
<link
  rel="stylesheet"
  href={remoteCdnUrl("/pkg/font/IosevkAlly/IosevkAlly.css")}
/>
<link
  rel="stylesheet"
  href={remoteCdnUrl("/pkg/font/IosevkAlly/IosevkAllyP.css")}
/>
<link
  rel="stylesheet"
  href={remoteCdnUrl("/pkg/font/IosevkAlly/IosevkAllySP.css")}
/>

<ViewTransitions />

<SEO
  title={title}
  titleDefault={SITE_TITLE}
  titleTemplate={`%s | ${SITE_TITLE}`}
  description={description}
  openGraph={title
    ? {
        basic: {
          type: "website",
          title,
          url: Astro.url,
          image,
        },
      }
    : undefined}
  twitter={{
    card: "summary_large_image",
    title,
    description,
    image,
  }}
/>
